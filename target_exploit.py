#!/usr/bin/env python3
"""
Target Exploitation Master - Run all tools on specified target
أداة استغلال الهدف الرئيسية - تشغيل جميع الأدوات على هدف محدد
"""

import argparse
import subprocess
import datetime
import json
import os
import time

def run_command(cmd, tool_name):
    """Run a command and return results"""
    print(f"\n🎯 تشغيل: {tool_name}")
    print(f"الأمر: {cmd}")
    print("-" * 50)
    
    try:
        result = subprocess.run(cmd, shell=True, capture_output=True, text=True, timeout=300)
        success = result.returncode == 0
        print(f"✅ تم بنجاح" if success else f"⚠️  تم التنفيذ مع تحذير")
        return {
            "tool": tool_name,
            "command": cmd,
            "success": success,
            "return_code": result.returncode,
            "output": result.stdout[:500] if result.stdout else "",
            "error": result.stderr[:300] if result.stderr else ""
        }
    except Exception as e:
        print(f"❌ خطأ: {str(e)}")
        return {
            "tool": tool_name,
            "command": cmd,
            "success": False,
            "error": str(e)
        }

def main():
    parser = argparse.ArgumentParser(description="استغلال هدف محدد بجميع الأدوات")
    parser.add_argument("--target", "-t", required=True, help="الهدف (IP أو دومين)")
    parser.add_argument("--output", "-o", help="ملف الإخراج (اختياري)")
    
    args = parser.parse_args()
    target = args.target
    timestamp = datetime.datetime.now().strftime("%Y%m%d_%H%M%S")
    
    print(f"""
    ╔══════════════════════════════════════════════════════════════╗
    ║              أداة استغلال الهدف الرئيسية                      ║
    ║                  Target: {target:<25}                     ║
    ╚══════════════════════════════════════════════════════════════╝
    """)
    
    results = {
        "target": target,
        "timestamp": timestamp,
        "start_time": datetime.datetime.now().isoformat(),
        "tools": []
    }
    
    # Define tools to run
    tools = [
        ("ماسح الشبكة", f"python network_scanner.py --target {target}"),
        ("ماسح الويب", f"python web_security_scanner.py --target {target}"),
        ("الاستغلال العملي", f"python practical_exploitation.py --target {target} --demo all"),
        ("اثبات المفهوم", f"python poc_exploitation.py --target {target} --test all"),
        ("العرض العربي", f"python arabic_exploitation_demo.py --target {target} --demo all"),
        ("اختبار الاختراق", f"python penetration_testing_tool.py --target {target}"),
        ("أداة الثغرات الصفرية", f"python zero_day_tool.py --demo-mode"),
        ("أدوات الاستغلال", f"python exploitation_tools.py --demo")
    ]
    
    print(f"🚀 بدء استغلال الهدف: {target}")
    print(f"📅 الوقت: {datetime.datetime.now()}")
    print(f"🛠️ عدد الأدوات: {len(tools)}")
    print("=" * 60)
    
    # Run all tools
    successful = 0
    for i, (tool_name, cmd) in enumerate(tools, 1):
        print(f"\n📋 [{i}/{len(tools)}] {tool_name}")
        result = run_command(cmd, tool_name)
        results["tools"].append(result)
        if result["success"]:
            successful += 1
        time.sleep(1)
    
    # Summary
    print(f"\n{'='*60}")
    print("📊 ملخص النتائج")
    print(f"✅ الناجحة: {successful}/{len(tools)}")
    print(f"📈 نسبة النجاح: {(successful/len(tools)*100):.1f}%")
    print(f"⏰ الانتهاء: {datetime.datetime.now()}")
    
    # Save results
    output_file = args.output or f"target_{target.replace('.', '_').replace('://', '_')}_{timestamp}.json"
    with open(output_file, 'w', encoding='utf-8') as f:
        json.dump(results, f, ensure_ascii=False, indent=2)
    
    print(f"\n💾 تم حفظ النتائج في: {output_file}")
    
    # Generate Arabic report
    report_file = f"تقرير_استغلال_{target.replace('.', '_').replace('://', '_')}_{timestamp}.md"
    with open(report_file, 'w', encoding='utf-8') as f:
        f.write(f"""# تقرير استغلال الهدف: {target}

## معلومات التنفيذ
- **الهدف**: {target}
- **التاريخ**: {datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')}
- **النتائج**: {output_file}

## نتائج الأدوات

""")
        for tool in results["tools"]:
            status = "✅ ناجح" if tool["success"] else "❌ فاشل"
            f.write(f"### {tool['tool']}\n")
            f.write(f"- **الحالة**: {status}\n")
            f.write(f"- **الأمر**: `{tool['command']}`\n")
            if tool.get("output"):
                f.write(f"- **المخرجات**: {tool['output'][:100]}...\n")
            f.write("\n")
    
    print(f"📝 التقرير العربي: {report_file}")
    print("\n🎉 تم اكتمال استغلال الهدف بنجاح!")

if __name__ == "__main__":
    main()